/**
 * This file is auto-generated by tgen
 * Don't change manually
 */
{{- $length := len .Methods -}}
{{- if gt $length 0 }}
import webapi from "./webapi";
{{- end }}
{{- range .Includes }}
import * as {{ . }} from "./{{ . }}Service";
{{- end }}

{{ range $enumKey, $enum := .Enums }}
export enum {{ $enum.Name }} {
{{- range $valKey, $val := $enum.Values }}
	{{ $val.Name }} = {{ $val.Value -}},
{{- end }}
}
{{- end }}

{{ range .Interfaces }}
export interface {{ .Name }} {
{{- range .Fields }}
	{{ .Name }}: {{ .Type -}};
{{- end }}
}
{{- end }}

{{ $root := . -}}
{{ range .Methods }}
export function {{ .Name }}({{ .Arguments | $root.AssembleParamsValType}}): Promise<{{ .ReturnType }}> {
	return webapi<{{ .ReturnType }}>("{{ .ServiceName }}.{{ .Name }}", { {{ .Arguments | $root.AssembleParamsVal }} });
}
{{ end }}

{{ if gt $length 0 }}
export default {
{{- range .Methods }}
	{{ .Name -}},
{{- end }}
};
{{ end }}
