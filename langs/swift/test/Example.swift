/**
 * This file is auto-generated by tgen
 * Don't change manually
 */

import Foundation

// structs

class TExample: EZObject {

    var amountAvailable: Double = 0.0

    var rebateAmountAvailable: String?

    var amountPendingVerification: Bool = false

    var pendingWithdrawAmount: Int = 0

    var unpaidAmount: Int64 = 0

    var fooes: [TFoo]?

    override var allKeys: Set<String> {
        return ["amountAvailable", "rebateAmountAvailable", "amountPendingVerification", "pendingWithdrawAmount", "unpaidAmount", "fooes"]
    }

    override func fromJSON(jsonObject: AnyObject?) -> Bool {
        guard super.fromJSON(jsonObject) else { return false }

        guard let dict = jsonObject as? [String: AnyObject] else { return false }

        amountAvailable = dict["amountAvailable"] as? Double ?? 0.0
        rebateAmountAvailable = dict["rebateAmountAvailable"] as? String
        amountPendingVerification = dict["amountPendingVerification"] as? Bool ?? false
        pendingWithdrawAmount = dict["pendingWithdrawAmount"] as? Int ?? 0
        unpaidAmount = dict["unpaidAmount"] as? Int64 ?? 0
        fooes = [TFoo](jsonObject: dict["fooes"])

        return true
    }

    override func toJSON() -> AnyObject {
        var dict = [String: AnyObject]()

        dict["amountAvailable"] = amountAvailable
        dict["rebateAmountAvailable"] = rebateAmountAvailable
        dict["amountPendingVerification"] = amountPendingVerification
        dict["pendingWithdrawAmount"] = pendingWithdrawAmount
        dict["unpaidAmount"] = NSNumber(longLong: unpaidAmount)
        dict["fooes"] = fooes?.toJSON()

        return dict
    }

}

class TFoo: EZObject {

    override var allKeys: Set<String> {
        return []
    }

    override func fromJSON(jsonObject: AnyObject?) -> Bool {
        guard super.fromJSON(jsonObject) else { return false }

        guard let dict = jsonObject as? [String: AnyObject] else { return false }

        return true
    }

    override func toJSON() -> AnyObject {
        var dict = [String: AnyObject]()

        return dict
    }

}

// services

class Example: BasicService {

    class func getPendingWithdrawAmount(success: (Int) -> Void, failure: ((NSError) -> Void)? = nil) -> Int {
        let params = [String: AnyObject]()
        let api = "Example.getPendingWithdrawAmount"

        debugPrint("api", " req: ", params)

        AreaService.current?.JSRONPRCClient.invokeMethod(api, withParameters: params, success: { (operation, responseObject) -> Void in
            debugPrint(api, " resp: ", responseObject);

            success(responseObject as? Int ?? 0)
            }, failure: { (operation, error) -> Void in
                failure?(error)
        })
    }

    class func ping(ip: String?, success: (Void) -> Void, failure: ((NSError) -> Void)? = nil) {
        var params = [String: AnyObject]()
        params["ip"] = ip

        let api = "Example.ping"

        debugPrint("api", " req: ", params)

        AreaService.current?.JSRONPRCClient.invokeMethod(api, withParameters: params, success: { (operation, responseObject) -> Void in
            debugPrint(api, " resp: ", responseObject);

            success()
            }, failure: { (operation, error) -> Void in
                failure?(error)
        })
    }

}

